{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNumberClick","number","stateArr","state","activeValue","inputDisplayArr","slice","setState","i","length","push","handleOperatorClick","operator","joined","join","joinedNumber","Number","activeOperator","operatorSymbol","react_default","a","createElement","className","value","handleEqualClick","_this$state","splitAdded","toString","split","splitSubtracted","splitMultiplied","splitDivided","clearInput","lastNumber","title","document","getElementById","btn7","btn8","btn9","divide","btn4","btn5","btn6","times","btn1","btn2","btn3","minus","btn0","dbl","dot","plus","equalBtn","clearBtn","titleBox","calcContainer","calcBox","TweenMax","from","ease","Bounce","easeOut","y","x","delay","opacity","inputDisplay","_this2","_this$state2","id","class","type","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03a39725.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { TweenMax, Bounce, Power0 } from \"gsap/all\"\n\nclass App extends Component {\n  constructor() {\n    super() \n    this.state = {\n      inputDisplayArr: [0],\n      lastNumber: 0,\n      activeOperator: null,\n      operatorSymbol: '',\n      activeValue: 0,\n      value: 0\n    }\n  }\n\n  componentDidMount() {\n    let title = document.getElementById('test')\n    let btn7 = document.getElementById('btn-7')\n    let btn8 = document.getElementById('btn-8')\n    let btn9 = document.getElementById('btn-9')\n    let divide = document.getElementById('divide')\n\n    let btn4 = document.getElementById('btn-4')\n    let btn5 = document.getElementById('btn-5')\n    let btn6 = document.getElementById('btn-6')\n    let times = document.getElementById('times')\n\n    let btn1 = document.getElementById('btn-1')\n    let btn2 = document.getElementById('btn-2')\n    let btn3 = document.getElementById('btn-3')\n    let minus = document.getElementById('minus')\n\n    let btn0 = document.getElementById('btn-0')\n    let dbl = document.getElementById('dbl')\n    let dot = document.getElementById('dot')\n    let plus = document.getElementById('plus')\n\n    let equalBtn = document.getElementById('equalBtn')\n    let clearBtn = document.getElementById('clearBtn')\n\n    let titleBox = document.getElementById('title-box')\n    let calcContainer = document.getElementById('calc-container')\n    let calcBox = document.getElementById('calc-box')\n\n\n    TweenMax.from(title, 2.5, { ease: Bounce.easeOut, y: -500 } )\n    TweenMax.from(btn7, 1.5, {y: 0, x:-1500 })\n    TweenMax.from(btn8, 1, {y: 0, x:-1500 })\n    TweenMax.from(btn9, 1, {y: 0, x:1500 })\n    TweenMax.from(divide, 1.5, {y: 0, x:1500 })\n\n    TweenMax.from(btn4, 1.5, {y: 0, x:-1500 })\n    TweenMax.from(btn5, 1, {y: 0, x:-1500 })\n    TweenMax.from(btn6, 1, {y: 0, x:1500 })\n    TweenMax.from(times, 1.5, {y: 0, x:1500 })\n\n    TweenMax.from(btn1, 1.5, {y: 0, x:-1500 })\n    TweenMax.from(btn2, 1, {y: 0, x:-1500 })\n    TweenMax.from(btn3, 1, {y: 0, x:1500 })\n    TweenMax.from(minus, 1.5, {y: 0, x:1500 })\n\n    TweenMax.from(btn0, 1.5, {y: 0, x:-1500 })\n    TweenMax.from(dbl, 1, {y: 0, x:-1500 })\n    TweenMax.from(dot, 1, {y: 0, x:1500 })\n    TweenMax.from(plus, 1.5, {y: 0, x:1500 })\n\n    TweenMax.from(clearBtn, 1.5, {y: 0, x:-1500 })\n    TweenMax.from( equalBtn, 3, {delay:1.5, opacity: 0})\n\n    TweenMax.from(titleBox, .1, {y: 0, x:-1500 })\n    TweenMax.from(calcContainer, .5, {y: 1500, x:0 })\n    TweenMax.from(calcBox, .5, {y: 1500, x:0 })\n  }\n  handleNumberClick = (number) => {\n    let stateArr;\n    if (this.state.activeValue === 0) {\n    stateArr = this.state.inputDisplayArr.slice()\n    } else {\n      stateArr = [0]\n      this.setState({\n        activeValue: 0\n      })\n    }\n    \n    if ( (number === 0 || number === 'dbl') && stateArr[0] === 0 && stateArr[1] !== '.') {\n      return\n    }\n    for (let i = 0; i < stateArr.length; i++) {\n      if (stateArr[i] === '.' && number === '.')\n      return \n      \n    }\n    if(stateArr[0] === 0  &&  number !== '.' && (number !== 0 || number !== 'dbl') && stateArr[1] !== '.') {\n        stateArr = []\n        stateArr.push(number) \n        this.setState ({\n        inputDisplayArr: stateArr\n      })\n    } else if(number === 'dbl')  {\n      stateArr.push(0)\n      stateArr.push(0) \n      this.setState ({\n      inputDisplayArr: stateArr\n      })\n    }else  {\n      stateArr.push(number) \n      this.setState ({\n        inputDisplayArr: stateArr,\n\n      })\n    }\n  }\n  handleOperatorClick = (operator) => {\n    let num = this.state.inputDisplayArr.slice()\n    let joined = num.join('')\n    let joinedNumber = Number(joined)\n    \n    switch(operator) {\n      case 'divide':\n      this.setState({\n        activeOperator: 'divide',\n        operatorSymbol: <i className=\"fas fa-divide\"></i>,\n        activeValue: joinedNumber,\n        value: joinedNumber\n      })\n      break;\n      case 'times':\n      this.setState({\n        activeOperator: 'times',\n        operatorSymbol:  <i className=\"fas fa-times\"></i>,\n        activeValue: joinedNumber,\n        value: joinedNumber\n      })\n      break;\n      case 'minus':\n      this.setState({\n        activeOperator: 'minus',\n        operatorSymbol:  <i className=\"fas fa-minus\"></i>,\n        activeValue: joinedNumber,\n        value: joinedNumber\n      })\n      break;\n      case 'plus':\n      this.setState({\n        activeOperator: 'plus',\n        operatorSymbol:  <i className=\"fas fa-plus\"></i>,\n        activeValue: joinedNumber,\n        value: joinedNumber\n      })\n      break; \n      \n      default:\n      break;\n    }\n    \n  }\n  handleEqualClick = () => {\n    const {activeOperator, value} = this.state\n    let num = this.state.inputDisplayArr.slice()\n    let joined = num.join('')\n    let joinedNumber = Number(joined)\n\n    switch(activeOperator) {\n      case 'plus':\n      let added = value + joinedNumber\n      let splitAdded = added.toString().split('')\n      this.setState({\n        inputDisplayArr: splitAdded,\n        activeOperator: null,\n        operatorSymbol: ''\n      })\n      break;\n\n      case 'minus':\n      let subtracted = value - joinedNumber\n      let splitSubtracted = subtracted.toString().split('')\n      this.setState({\n        inputDisplayArr: splitSubtracted,\n        activeOperator: null,\n        operatorSymbol: ''\n      })\n      break;\n\n      case 'times':\n      let multiplied = value * joinedNumber\n      let splitMultiplied = multiplied.toString().split('')\n      this.setState({\n        inputDisplayArr: splitMultiplied,\n        activeOperator: null,\n        operatorSymbol: ''\n      })\n      break;\n\n      case 'divide':\n      let divided = value / joinedNumber\n      let splitDivided = divided.toString().split('')\n      this.setState({\n        inputDisplayArr: splitDivided,\n        activeOperator: null,\n        operatorSymbol: ''\n      })\n      break;\n\n      default:\n      break;\n    }\n  }\n  clearInput = () => {\n    this.setState({\n      inputDisplayArr: [0],\n      activeOperator: null,\n      operatorSymbol: ''\n    })\n  }\n  render() {\n    const {inputDisplayArr, activeOperator, operatorSymbol} = this.state\n    let inputDisplay;\n    if (inputDisplayArr.length > 10) {\n      inputDisplay = inputDisplayArr.slice(0,9).join('')\n    } else {\n       inputDisplay = inputDisplayArr.join('')\n    }\n    return (\n      <div className=\"App\">\n        <div id=\"calc-box\" className=\"calc-box\">\n        <div id=\"title-box\"className=\"title-box\">\n          <h1>React <i id=\"test\" class=\"fab fa-react\"></i> Calculator</h1>\n          {/* <h1>React.js Calculator</h1> */}\n        </div>\n          <div id=\"calc-container\" className=\"calc-container\">\n            <div className=\"screen-box\">\n              <div className=\"operator-box\">\n              {!activeOperator? '' : operatorSymbol}\n              </div>\n              <input type=\"text\" className=\"screen\" value={inputDisplay}/>\n            </div>\n            <div className=\"keypad-box\">\n                <button id=\"btn-7\" className=\"num-button\" onClick={() => this.handleNumberClick(7)}>7</button>\n                <button id=\"btn-8\" className=\"num-button\" onClick={() => this.handleNumberClick(8)}>8</button>\n                <button id=\"btn-9\" className=\"num-button\" onClick={() => this.handleNumberClick(9)}>9</button>\n                <button id=\"divide\" className=\"operator-button\" onClick={() => this.handleOperatorClick('divide')}>&#247;</button>\n            </div>\n            <div className=\"keypad-box\">\n                <button id=\"btn-4\" className=\"num-button\" onClick={() => this.handleNumberClick(4)}>4</button>\n                <button id=\"btn-5\" className=\"num-button\" onClick={() => this.handleNumberClick(5)}>5</button>\n                <button id=\"btn-6\" className=\"num-button\" onClick={() => this.handleNumberClick(6)}>6</button>\n                <button id=\"times\" className=\"operator-button\" onClick={() => this.handleOperatorClick('times')}>&#215;</button>\n            </div>\n            <div className=\"keypad-box\">\n                <button id=\"btn-1\" className=\"num-button\" onClick={() => this.handleNumberClick(1)}>1</button>\n                <button id=\"btn-2\" className=\"num-button\" onClick={() => this.handleNumberClick(2)}>2</button>\n                <button id=\"btn-3\" className=\"num-button\" onClick={() => this.handleNumberClick(3)}>3</button>\n                <button id=\"minus\" className=\"operator-button\" onClick={() => this.handleOperatorClick('minus')}>&#8722;</button>\n            </div>\n            <div className=\"keypad-box\">\n                <button id=\"btn-0\" className=\"num-button\" onClick={() => this.handleNumberClick(0)}>0</button>\n                <button id=\"dbl\" className=\"num-button dbl-zero-btn\" onClick={() => this.handleNumberClick(\"dbl\")}>00</button>\n                <button id=\"dot\" onClick={() => this.handleNumberClick('.')} className=\"num-button\">.</button>\n                <button id=\"plus\" className=\"operator-button\" onClick={() => this.handleOperatorClick('plus')}>&#43;</button>\n            </div>\n            <div className=\"eql-btn-box\">\n              <button id=\"clearBtn\" className=\"clear-btn\" onClick={this.clearInput}>C</button>\n              <button id=\"equalBtn\" className=\"equal-btn\" onClick={this.handleEqualClick}>&#61;</button>\n              <div className=\"fakey-box\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}